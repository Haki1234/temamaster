{"remainingRequest":"C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\src\\components\\auth\\register.vue?vue&type=style&index=0&id=3b57ae4a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\src\\components\\auth\\register.vue","mtime":1592168063702},{"path":"C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\VueAuthapp-master\\client\\authapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5iYWNrdXsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQob3JhbmdlLGFsaWNlYmx1ZSk7CiAgYm9yZGVyLXJhZGl1czogMTVweDsKICBtYXJnaW4tYm90dG9tOiA3MHB4OwogIGhlaWdodDphdXRvOwogIHBhZGRpbmctdG9wOjUwcHggIWltcG9ydGFudDsKfQouaW5wdXQuaW52YWxpZCBpbnB1dCB7CiAgYm9yZGVyOiAxcHggc29saWQgcmVkOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzYsIDEyNCwgMTUyKTsKfQo="},{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-6 offset-lg-6 col-sm-10 offset-sm-1\">\n        \n        <form\n          class=\"text-center border border-primary p-5 backu\"\n          @submit.prevent=\"registerUser\"\n        >\n          <h1>Regjistrohu</h1><br>\n          \n          <div class=\"input\" :class=\"{invalid: $v.register.name.$error}\"> \n          <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control mb-5\"\n            placeholder=\"Emri\"\n            v-model=\"register.name\"\n            @blur=\"$v.register.name.$touch()\"\n          />\n          <p v-if=\"$v.register.name.$error\">Emri juaj duhet të jetë më i gjatë se 3 gërma</p>\n          </div>\n\n          <div class=\"input\" :class=\"{invalid: $v.register.email.$error}\"> \n          <input\n            type=\"email\"\n            id=\"email\"\n            class=\"form-control mb-5\"\n            placeholder=\"Email\"\n            v-model=\"register.email\"\n            @blur=\"$v.register.email.$touch()\"\n          />\n          <p v-if=\"$v.register.email.$error\">Ju lutem vendosni një adresë të vlefshme e-maili.</p>\n            </div>\n\n          <!-- Password -->\n\n          <div class=\"input\" :class=\"{invalid: $v.register.password.$error}\"> \n          <input\n            type=\"password\"\n            id=\"password\"\n            class=\"form-control mb-5\"\n            placeholder=\"Fjalëkalimi\"\n            v-model=\"register.password\"\n            @blur=\"$v.register.password.$touch()\"\n            required\n          />\n          <p v-if=\"$v.register.password.$error\">Fjalëkalimi juaj duhet të përmbajë të paktën 6 gërma/numra.</p>\n          </div>\n\n          <div class=\"input\" :class=\"{invalid: $v.register.confirmpassword.$error}\"> \n          <input\n            type=\"password\"\n            id=\"confirmpassword\"\n            class=\"form-control mb-5\"\n            placeholder=\"Konfirmoni fjalëkalimin\"\n            v-model=\"register.confirmpassword\"\n            @blur=\"$v.register.confirmpassword.$touch()\"\n            required\n          />\n          <p v-if=\"$v.register.confirmpassword.$error\">Fjalëkalimi duhet të jetë i njëjtë.</p>\n          </div>\n          \n          <p>\n             Keni një adresë?<router-link to=\"/login\"\n              >   Klikoni këtu.</router-link\n            >\n\n            <!-- Sign in button -->\n            <center>\n              <button class=\"btn btn-primary btn-block w-75 my-4\" type=\"submit\">\n                Regjistrohu\n              </button>\n            </center>\n          </p>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, email , numeric, minLength, sameAs } from 'vuelidate/lib/validators'\nimport swal from \"sweetalert\";\nexport default {\n  data() {\n    return {\n      register: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmpassword: \"\"\n      }\n    };\n  }, \n  validations: {\n    register: {\n      email: {\n        required: required,\n      email: email\n      },\n      name: {\n        required: required,\n      minLeng: minLength(3)\n      },\n      password: {\n        required: required,\n      minLeng: minLength(6)\n      },\n      confirmpassword: {\n        sameAs: sameAs('password')\n      }      \n    }\n  },\n  methods: {\n    async registerUser() {\n      try {\n        let response = await this.$http.post(\"/user/register\", this.register);\n        console.log(response);\n        let token = response.data.token;\n        if (token) {\n          localStorage.setItem(\"jwt\", token);\n          this.$router.push({ path: '/home' })\n          this.$router.go(0);\n          swal(\"Success\", \"Regjistrimi ishte i suksesshëm\", \"success\");\n          \n        } else {\n          swal(\"Error\", \"Dicka shkoi keq\", \"Error\");\n        }\n      } catch (err) {\n        let error = err.response;\n        if (error.status == 409) {\n          swal(\"Error\", error.data.message, \"error\");\n        } else {\n          swal(\"Error\", error.data.err.message, \"error\");\n        }\n      }\n    }\n  }\n};\n</script>\n<style scoped>\n.backu{\n  background-image: linear-gradient(orange,aliceblue);\n  border-radius: 15px;\n  margin-bottom: 70px;\n  height:auto;\n  padding-top:50px !important;\n}\n.input.invalid input {\n  border: 1px solid red;\n  background-color: rgb(236, 124, 152);\n}\n</style>\n"]}]}